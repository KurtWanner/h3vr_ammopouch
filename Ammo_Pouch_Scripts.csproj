<Project Sdk="Microsoft.NET.Sdk">
    <!-- Plugin name, version, etc. -->
    <!-- TODO: Change these values! -->
    <PropertyGroup>
        <AssemblyName>Ammo_Pouch.Ammo_Pouch_Scripts</AssemblyName>
        <Version>0.1.2</Version>
        <Authors>Dr_Dog_PhD</Authors>
        <AssemblyTitle>Ammo Pouch Scripts</AssemblyTitle>
        <Description>Necessary scripts and hooks for the Ammo Pouch.</Description>
        <PackageProjectUrl>https://github.com/H3VR-Modding/H3VRPluginTemplate</PackageProjectUrl>
    </PropertyGroup>

    <!-- Probably don't need to touch these -->
    <PropertyGroup>
        <TargetFramework>net35</TargetFramework>
        <Nullable>disable</Nullable>
        <LangVersion>latest</LangVersion>
        <AllowUnsafeBlocks>true</AllowUnsafeBlocks>
        <IsPackable>false</IsPackable>
        <PlatformTarget>x64</PlatformTarget>
        <Optimize>true</Optimize>
        <DebugSymbols>false</DebugSymbols>
        <DebugType>None</DebugType>
    </PropertyGroup>

    <!-- Debug configuration overrides -->
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
        <Optimize>false</Optimize>
        <DefineConstants>DEBUG;</DefineConstants>
        <DebugSymbols>true</DebugSymbols>
        <DebugType>full</DebugType>
    </PropertyGroup>

    <!-- Project references -->
    <ItemGroup>
        <!-- Required to compile .NET Framerowk 3.5 libraries -->

        <!-- Automatically generates a BepInEx plugin from the values at the top of this file -->
        <PackageReference Include="BepInEx.AutoPlugin" Version="1.1.0">
            <PrivateAssets>all</PrivateAssets>
            <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>
        <PackageReference Include="H3VR.GameLibs" Version="0.112.2" />
        <PackageReference Include="Microsoft.NETFramework.ReferenceAssemblies.net35" Version="1.0.3">
          <PrivateAssets>all</PrivateAssets>
          <IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
        </PackageReference>

        <!-- References to Unity, BepInEx, and the publicized H3 libraries -->
        <PackageReference Include="UnityEngine" Version="5.6.1" />
        <PackageReference Include="BepInEx.Core" Version="5.4.17" />
    </ItemGroup>
    <ItemGroup>
      <Reference Include="0Harmony">
        <HintPath>..\..\Assemblies\0Harmony.dll</HintPath>
      </Reference>
      <Reference Include="Assembly-CSharp">
        <HintPath>..\..\Assemblies\Assembly-CSharp.dll</HintPath>
      </Reference>
      <Reference Include="Assembly-CSharp-firstpass">
        <HintPath>..\..\Assemblies\Assembly-CSharp-firstpass.dll</HintPath>
      </Reference>
      <Reference Include="Assembly-UnityScript">
        <HintPath>E:\SteamLibrary\steamapps\common\H3VR\h3vr_Data\Managed\Assembly-UnityScript.dll</HintPath>
      </Reference>
      <Reference Include="BepInEx">
        <HintPath>..\..\Assemblies\BepInEx.dll</HintPath>
      </Reference>
      <Reference Include="BepInEx.Harmony">
        <HintPath>..\..\Assemblies\BepInEx.Harmony.dll</HintPath>
      </Reference>
      <Reference Include="BepInEx.MonoMod.HookGenPatcher">
        <HintPath>..\..\Assemblies\BepInEx.MonoMod.HookGenPatcher.dll</HintPath>
      </Reference>
      <Reference Include="BepInEx.Preloader">
        <HintPath>..\..\Assemblies\BepInEx.Preloader.dll</HintPath>
      </Reference>
      <Reference Include="HarmonyXInterop">
        <HintPath>..\..\Assemblies\HarmonyXInterop.dll</HintPath>
      </Reference>
      <Reference Include="MMHOOK_Assembly-CSharp">
        <HintPath>..\..\Assemblies\MMHOOK_Assembly-CSharp.dll</HintPath>
      </Reference>
      <Reference Include="MMHOOK_Assembly-CSharp-firstpass">
        <HintPath>..\..\Assemblies\MMHOOK_Assembly-CSharp-firstpass.dll</HintPath>
      </Reference>
      <Reference Include="Mono.Cecil">
        <HintPath>..\..\Assemblies\Mono.Cecil.dll</HintPath>
      </Reference>
      <Reference Include="Mono.Cecil.Mdb">
        <HintPath>..\..\Assemblies\Mono.Cecil.Mdb.dll</HintPath>
      </Reference>
      <Reference Include="Mono.Cecil.Pdb">
        <HintPath>..\..\Assemblies\Mono.Cecil.Pdb.dll</HintPath>
      </Reference>
      <Reference Include="Mono.Cecil.Rocks">
        <HintPath>..\..\Assemblies\Mono.Cecil.Rocks.dll</HintPath>
      </Reference>
      <Reference Include="MonoMod">
        <HintPath>..\..\Assemblies\MonoMod.dll</HintPath>
      </Reference>
      <Reference Include="MonoMod.ILHelpers">
        <HintPath>..\..\Assemblies\MonoMod.ILHelpers.dll</HintPath>
      </Reference>
      <Reference Include="MonoMod.RuntimeDetour">
        <HintPath>..\..\Assemblies\MonoMod.RuntimeDetour.dll</HintPath>
      </Reference>
      <Reference Include="MonoMod.Utils">
        <HintPath>..\..\Assemblies\MonoMod.Utils.dll</HintPath>
      </Reference>
      <Reference Include="SupplyRaid">
        <HintPath>..\..\Assemblies\SupplyRaid.dll</HintPath>
      </Reference>
      <Reference Include="UnityEngine">
        <HintPath>..\..\Assemblies\UnityEngine.dll</HintPath>
      </Reference>
      <Reference Include="UnityEngine.UI">
        <HintPath>..\..\Assemblies\UnityEngine.UI.dll</HintPath>
      </Reference>
      <Reference Include="Valve.Newtonsoft.Json">
        <HintPath>E:\SteamLibrary\steamapps\common\H3VR\h3vr_Data\Managed\Valve.Newtonsoft.Json.dll</HintPath>
      </Reference>
    </ItemGroup>

    <!-- When in debug mode, also build mono debugging symbols (Only available on Windows) -->
    <Target Name="MonoDebugSymbols" AfterTargets="PostBuildEvent" Condition="'$(DebugType)' == 'full' AND '$(OS)' == 'Windows_NT'">
        <Exec Command="$(ProjectDir)../tools/pdb2mdb.exe $(ProjectDir)$(OutDir)$(AssemblyName).dll" />
    </Target>

    <!-- Build a thunderstore zip after a build (Only available on Windows) -->
    <Target Name="PackageThunderstore" AfterTargets="MonoDebugSymbols" Condition="'$(OS)' == 'Windows_NT'">
        <Exec Command="C:\Windows\System32\WindowsPowerShell\v1.0\powershell.exe -NonInteractive -executionpolicy Unrestricted -command &quot;&amp; { ../tools/make_ts.ps1 -ProjectFilePath $(ProjectPath) -OutputPath $(ProjectDir)$(OutDir) } &quot;" LogStandardErrorAsError="True" ContinueOnError="False" />
    </Target>

    <!-- The 'clean' command won't cleanup stuff we make so do that here -->
    <Target Name="CleanAdditionalStuff" AfterTargets="Clean">
        <Delete Files="$(ProjectDir)$(OutDir)$(AssemblyName).dll.mdb" />
        <Delete Files="$(ProjectDir)$(OutDir)$(AssemblyName).zip" />
    </Target>
</Project>